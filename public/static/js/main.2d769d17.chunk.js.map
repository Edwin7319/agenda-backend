{"version":3,"sources":["app/hooks/useForm.js","environments/environment.prod.js","app/services/auth-service.js","app/types/types.js","app/constant/toaster-config.js","app/actions/auth.js","app/components/auth/login/LoginScreen.js","app/services/event-service.js","app/helpers/validate-events-to-load.js","app/actions/calendar.js","app/components/ui/Navbar.js","app/components/calendar/CalendarEvent.js","app/constant/custom-modal-style.js","app/actions/ui.js","app/components/calendar/form/CalendarForm.js","app/components/calendar/modal/CalendarModal.js","app/constant/calendar-message.js","app/components/ui/AddNewEvent.js","app/components/ui/DeleteEvent.js","app/components/calendar/route/CalendarScreen.js","app/components/auth/register/RegisterScreen.js","app/router/PublicRouter.js","app/router/PrivateRouter.js","app/router/AppRouter.js","app/reducers/uiReducer.js","app/reducers/calendarReducer.js","app/reducers/authReducer.js","app/reducers/principalReducer.js","app/store/store.js","app/CalendarApp.js","index.js"],"names":["useForm","initialState","useState","formValues","setFormValues","resetForm","formInputChange","target","name","value","enviroment","url","baseUrl","loginService","credentials","axios","method","data","registerUserService","user","renewTokenService","token","localStorage","getItem","headers","TYPES","TOASTER_CONFIG","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","startLogout","dispatch","clear","type","authUserTimeOut","login","payload","LoginScreen","useDispatch","email","password","className","onSubmit","event","preventDefault","a","ok","setItem","Date","getTime","uid","_id","toast","error","console","mensaje","htmlFor","id","autoComplete","placeholder","onChange","src","alt","to","createEventService","getAllEventService","updateEventService","deleteEventService","validateEventsToLoad","events","map","startDate","moment","toDate","endDate","calendarLoadingEvents","calendarClearSelectedEvent","calendarUpdateEvent","calendarDeleteEvent","calendarAddNewEvent","Navbar","useSelector","state","auth","toUpperCase","onClick","CalendarEvent","title","CUSTOM_MODAL_STYLE","content","top","left","right","bottom","marginRight","transform","uiOpenModal","uiCloseModal","initalDate","add","format","finishDate","CalendarForm","selectedEvent","select","calendar","notes","isFormValied","setFormValid","validateForm","useCallback","trim","length","useEffect","actualEvent","date1","date2","isSameOrBefore","newEvent","eventUpdated","success","calendarStartUpdateEvent","disapatch","getState","eventSaved","newEven","calendatStartAddNewEvent","TextField","InputLabelProps","shrink","rows","disabled","Modal","setAppElement","CalendarModal","modalOpen","ui","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","CALENDAR_MESSAGES","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewEvent","DeleteEvent","localizer","momentLocalizer","CalenderScreen","lastView","setLastView","eventsMapped","startAccessor","endAccessor","height","messages","eventPropGetter","isSelected","backgroundColor","boderRadius","display","color","onDoubleClickEvent","onSelectEvent","calendarSetSelectedEvent","onView","onSelectSlot","selectable","view","components","initalStateErrosForm","RegisterScreen","passwordConfirm","formValid","errorsForm","setErrorForm","err","validator","isEmail","isValid","userSaved","warning","PublicRouter","isAuth","Component","component","rest","props","PrivateRouter","AppRouter","path","CalendarScreen","uiReducer","action","calendarReducer","filter","authenticated","authReducer","principalReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d769d17.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\n function useForm(initialState = {}) {\r\n\r\n    const [formValues, setFormValues] = useState(initialState);\r\n\r\n    const resetForm = (newFormState = initialState) => {\r\n        setFormValues(initialState);\r\n    }\r\n\r\n    const formInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n\r\n    return [\r\n        formValues,\r\n        formInputChange,\r\n        resetForm,\r\n        setFormValues,\r\n    ];\r\n}\r\n\r\nexport default useForm;","export const enviroment = {\r\n    production: true,\r\n    backend: {\r\n        url: 'https://edw-agenda-app.herokuapp.com',\r\n    }\r\n}","import {enviroment} from '../../environments/environment.prod';\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = enviroment.backend.url;\r\n\r\nfunction loginService(credentials) {\r\n\r\n    const url = `${baseUrl}/auth/login`;\r\n\r\n    // return fetch(url, {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify(credentials),\r\n    // })\r\n    return axios({\r\n        method: 'post',\r\n        url,\r\n        data: {\r\n            ...credentials\r\n        }\r\n    });\r\n}\r\n\r\nfunction registerUserService(user) {\r\n    const url = `${baseUrl}/auth/register`;\r\n    return axios({\r\n        method: 'post',\r\n        url,\r\n        data: {\r\n            ...user,\r\n        }\r\n    });\r\n}\r\n\r\nfunction renewTokenService() {\r\n    const token = localStorage.getItem('token') || '';\r\n    const url = `${baseUrl}/auth/renew-token`;\r\n    return axios({\r\n        method: 'get',\r\n        url,\r\n        headers: {\r\n            'x-token': token,\r\n        },\r\n    });\r\n}\r\n\r\nexport {\r\n    loginService,\r\n    registerUserService,\r\n    renewTokenService\r\n}","export const TYPES = {\r\n    uiOpenModal: 'open modal',\r\n    uiCloseModal: 'close modal',\r\n    calendarSetSelectedEvent: 'set selected event',\r\n    calendarStartAddNewEvent: 'start add new event',\r\n    calendarAddNewEvent: 'add new event',\r\n    calendarClearSelectedEvent: 'clear selected event',\r\n    calendarUpdateEvent: 'update event',\r\n    calendarStartUpdateEvent: 'start update event',\r\n    calendarDeleteEvent: 'delete event',\r\n    calendarStartLoadEvents: 'start load events',\r\n    calendarLoadEvents: 'load events',\r\n    calendarLogout: 'calendar logout',\r\n    authAuthenticated: 'authenticated login',\r\n    authAuthenticatedFinish: 'finish authenticated login',\r\n    authStartLogin: 'start login',\r\n    authLogin: 'login',\r\n    authStartRegister: 'regiser',\r\n    authStartRenewToken: 'renew token',\r\n    authLogout: 'logout',\r\n}","export const TOASTER_CONFIG = {\r\n    position: 'top-right',\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n}","import {loginService, registerUserService, renewTokenService} from '../services/auth-service';\r\nimport {TYPES} from '../types/types';\r\nimport {toast} from 'react-toastify';\r\nimport {TOASTER_CONFIG} from '../constant/toaster-config';\r\n\r\nfunction startLogin(credentials) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await loginService(credentials);\r\n            const {ok} = data;\r\n            if (ok) {\r\n                const {token} = data;\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('token-init-date', `${new Date().getTime()}`);\r\n                const {user: {_id: uid, name}} = data;\r\n                dispatch(login({\r\n                    uid,\r\n                    name,\r\n                }));\r\n            } else {\r\n                dispatch(authUserTimeOut());\r\n            }\r\n        } catch (e) {\r\n            dispatch(authUserTimeOut());\r\n            toast.error('Credenciales ingresadas no validas', {\r\n                ...TOASTER_CONFIG,\r\n                autoClose: 5000,\r\n            });\r\n            console.error({\r\n                mensaje: 'Error al logear usuario',\r\n                error: e,\r\n                data: credentials,\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction startRegisterUser(user) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await registerUserService(user);\r\n            const {ok} = data;\r\n            if (ok) {\r\n                const {token} = data;\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('token-init-date', `${new Date().getTime()}`);\r\n                const {userSaved: {_id: uid, name}} = data;\r\n                dispatch(login({\r\n                    uid,\r\n                    name,\r\n                }));\r\n            } else {\r\n                toast.warning('El correo que ha ingresado ya se encuentra registrado', {\r\n                    ...TOASTER_CONFIG,\r\n                    autoClose: 5000,\r\n                });\r\n            }\r\n        } catch (e) {\r\n            toast.error('Error al registrar usuario, revise la información', {\r\n                ...TOASTER_CONFIG,\r\n                autoClose: 5000,\r\n            });\r\n            console.error({\r\n                mensaje: 'Error al registrar usuario',\r\n                error: e,\r\n                data: user,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction renewToken() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await renewTokenService();\r\n            const {ok} = data;\r\n            if (ok) {\r\n                const {token} = data;\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('token-init-date', `${new Date().getTime()}`);\r\n                const {user: {_id: uid, name}} = data;\r\n                dispatch(login({\r\n                    uid,\r\n                    name,\r\n                }));\r\n            } else {\r\n                dispatch(authUserTimeOut());\r\n            }\r\n        } catch (e) {\r\n            console.error({\r\n                mensaje: 'Error al autenticar usuario',\r\n                error: e,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction startLogout() {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nfunction logout() {\r\n    return {\r\n        type: TYPES.authLogout,\r\n    }\r\n}\r\n\r\nfunction authUserTimeOut() {\r\n    return {\r\n        type: TYPES.authAuthenticatedFinish,\r\n    }\r\n}\r\n\r\n\r\nfunction login(user) {\r\n    return {\r\n        type: TYPES.authLogin,\r\n        payload: user,\r\n    }\r\n}\r\n\r\nexport {\r\n    startLogin,\r\n    startRegisterUser,\r\n    renewToken,\r\n    startLogout,\r\n}","import React from 'react';\r\n\r\nimport './login-style.scss';\r\nimport {Card} from 'primereact/card';\r\nimport {Link} from 'react-router-dom';\r\nimport useForm from '../../../hooks/useForm';\r\nimport {useDispatch} from 'react-redux';\r\nimport {startLogin} from '../../../actions/auth';\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const dispatch = useDispatch();\r\n    const [formValues, formInputChange] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(startLogin(formValues));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row h-100\">\r\n                <div className=\"col-md-5 mx-auto separacion-card\">\r\n                    <Card>\r\n                        <h4 className=\"text-center mb-4\">\r\n                            INGRESAR\r\n                        </h4>\r\n                        <hr/>\r\n                        <form onSubmit={handleOnSubmit}>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-sm-12 mt-3\">\r\n                                    <label\r\n                                        className=\"title-label\"\r\n                                        htmlFor=\"email\"\r\n                                    >\r\n                                        Usuario o correo:\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        autoComplete=\"off\"\r\n                                        placeholder=\"EJ: edwin@gmail.com\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={formInputChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-12 mt-3\">\r\n                                    <label\r\n                                        className=\"title-label\"\r\n                                        htmlFor=\"password\"\r\n                                    >\r\n                                        Password:\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"off\"\r\n                                        placeholder=\"**********\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={formInputChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-12 mt-4\">\r\n                                    <button\r\n                                        className=\"btn btn-block btn-sm btn-warning\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        <b>INGRESAR</b>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <hr/>\r\n                                Ingresar con:\r\n                                <div className=\"google-btn mt-3\">\r\n                                    <div className=\"google-icon-wrapper\">\r\n                                        <img className=\"google-icon\"\r\n                                             src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                                             alt=\"imagen_google\"\r\n                                        />\r\n                                    </div>\r\n                                    <p className=\"btn-text\"><b>CUENTA GOOGLE</b></p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-12 mt-3\">\r\n                                <button\r\n                                    className=\"btn btn-sm btn-block btn-link\"\r\n                                >\r\n                                    <Link to=\"/register\">\r\n                                        ¿Registrarse?\r\n                                    </Link>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import {enviroment} from '../../environments/environment.prod';\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = enviroment.backend.url + '/event';\r\n\r\nfunction createEventService(event) {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    return axios({\r\n        method: 'post',\r\n        url: baseUrl,\r\n        headers: {\r\n            'x-token': token,\r\n        },\r\n        data: {\r\n            ...event,\r\n        }\r\n    });\r\n}\r\n\r\nfunction getAllEventService() {\r\n    const token = localStorage.getItem('token');\r\n    return axios({\r\n        method: 'get',\r\n        url: baseUrl,\r\n        headers: {\r\n            'x-token': token,\r\n        },\r\n    });\r\n}\r\n\r\nfunction updateEventService(id, event) {\r\n    const token = localStorage.getItem('token');\r\n    return axios({\r\n        method: 'put',\r\n        url: `${baseUrl}/${id}`,\r\n        headers: {\r\n            'x-token': token,\r\n        },\r\n        data: {\r\n            event,\r\n        }\r\n    });\r\n}\r\n\r\nfunction deleteEventService(id) {\r\n    const token = localStorage.getItem('token');\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${baseUrl}/${id}`,\r\n        headers: {\r\n            'x-token': token,\r\n        },\r\n    });\r\n}\r\n\r\nexport {\r\n    createEventService,\r\n    getAllEventService,\r\n    updateEventService,\r\n    deleteEventService,\r\n}","import * as moment from 'moment';\r\n\r\nfunction validateEventsToLoad(events = []) {\r\n    return events.map(\r\n        (event) => ({\r\n            ...event,\r\n            startDate: moment(event.startDate).toDate(),\r\n            endDate: moment(event.endDate).toDate(),\r\n            user: {\r\n                uid: event.user._id,\r\n                name: event.user.name,\r\n            }\r\n        })\r\n    )\r\n}\r\n\r\nexport {\r\n    validateEventsToLoad,\r\n}","import {TYPES} from '../types/types';\r\nimport {toast} from \"react-toastify\";\r\nimport {TOASTER_CONFIG} from \"../constant/toaster-config\";\r\nimport {\r\n    createEventService,\r\n    deleteEventService,\r\n    getAllEventService,\r\n    updateEventService\r\n} from \"../services/event-service\";\r\nimport {validateEventsToLoad} from \"../helpers/validate-events-to-load\";\r\nimport * as moment from \"moment\";\r\n\r\nfunction calendatStartAddNewEvent(event) {\r\n    return async (disapatch, getState) => {\r\n        try {\r\n            const {data} = await createEventService(event);\r\n            const {ok} = data;\r\n            if (ok) {\r\n                const {user} = getState().auth;\r\n                const {eventSaved} = data;\r\n                const newEven = {\r\n                    ...eventSaved,\r\n                    user,\r\n                }\r\n                disapatch(calendarAddNewEvent(newEven));\r\n            } else {\r\n\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            toast.error('Error al registrar crear evento', {\r\n                ...TOASTER_CONFIG,\r\n                autoClose: 5000,\r\n            });\r\n            console.error({\r\n                mensaje: 'Error al registrar evento',\r\n                error: e,\r\n                data: event,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction calendarStartLoadingEvents() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await getAllEventService();\r\n            const {ok} = data;\r\n            if (ok) {\r\n                const {events} = data;\r\n                const eventsMapped = validateEventsToLoad(events);\r\n                dispatch(calendarLoadingEvents(eventsMapped));\r\n            }\r\n        } catch (e) {\r\n            toast.error('Error al buscar todos los eventos', {\r\n                ...TOASTER_CONFIG,\r\n                autoClose: 5000,\r\n            });\r\n            console.error({\r\n                mensaje: 'Error al buscar todos los eventos',\r\n                error: e,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction calendarStartUpdateEvent(id, event) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await updateEventService(id, event);\r\n            const {ok} = data;\r\n            if (ok) {\r\n                const {eventUpdated} = data;\r\n                const event = {\r\n                    ...eventUpdated,\r\n                    startDate: moment(eventUpdated.startDate).toDate(),\r\n                    endDate: moment(eventUpdated.endDate).toDate(),\r\n                    user: {\r\n                        uid: eventUpdated.user._id,\r\n                        name: eventUpdated.user.name,\r\n                    }\r\n                }\r\n                dispatch(calendarUpdateEvent(id, event));\r\n                toast.success('Evento editado de manera correcta', TOASTER_CONFIG);\r\n            }\r\n\r\n        } catch (e) {\r\n            toast.error('Error al actualizar el evento', {\r\n                ...TOASTER_CONFIG,\r\n                autoClose: 5000,\r\n            });\r\n            console.error({\r\n                mensaje: 'Error al actualizar el evento',\r\n                error: e,\r\n                data: event,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction calendarStartDeleteEvent(id) {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const {data} = await deleteEventService(id);\r\n            const {ok} = data;\r\n            if (ok) {\r\n                dispatch(calendarDeleteEvent(id));\r\n                toast.success('Evento eliminado de manera correcta', TOASTER_CONFIG);\r\n            }\r\n\r\n        } catch (e) {\r\n            toast.error('Error al eliminar el evento', {\r\n                ...TOASTER_CONFIG,\r\n                autoClose: 5000,\r\n            });\r\n            console.error({\r\n                mensaje: 'Error al eliminar el evento',\r\n                error: e,\r\n                data: id,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction calendarLoadingEvents(events) {\r\n    return {\r\n        type: TYPES.calendarLoadEvents,\r\n        payload: events,\r\n    }\r\n}\r\n\r\nfunction calendarSetSelectedEvent(event) {\r\n    return {\r\n        type: TYPES.calendarSetSelectedEvent,\r\n        payload: {\r\n            ...event\r\n        }\r\n    }\r\n}\r\n\r\nfunction calendarClearSelectedEvent() {\r\n    return {\r\n        type: TYPES.calendarClearSelectedEvent,\r\n        payload: null,\r\n    }\r\n}\r\n\r\nfunction calendarUpdateEvent(id, event) {\r\n    return {\r\n        type: TYPES.calendarUpdateEvent,\r\n        payload: {\r\n            id,\r\n            event: {\r\n                ...event\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nfunction calendarDeleteEvent(id) {\r\n    return {\r\n        type: TYPES.calendarDeleteEvent,\r\n        payload: id,\r\n    }\r\n}\r\n\r\n\r\nfunction calendarAddNewEvent(event) {\r\n    return {\r\n        type: TYPES.calendarAddNewEvent,\r\n        payload: {\r\n            ...event\r\n        }\r\n    }\r\n}\r\n\r\nfunction calendarLogout() {\r\n    return {\r\n        type: TYPES.calendarLogout,\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    calendarSetSelectedEvent,\r\n    calendatStartAddNewEvent,\r\n    calendarClearSelectedEvent,\r\n    calendarStartLoadingEvents,\r\n    calendarStartUpdateEvent,\r\n    calendarLogout,\r\n    calendarStartDeleteEvent,\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {startLogout} from '../../actions/auth';\r\nimport {calendarLogout} from '../../actions/calendar';\r\n\r\nfunction Navbar() {\r\n\r\n    const {user} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(startLogout());\r\n        dispatch(calendarLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                BIENVENIDO <b>{`${user.name}`.toUpperCase()}</b>  😘 👋\r\n            </span>\r\n\r\n            <button\r\n                className=\"btn btn-danger btn-sm\"\r\n            onClick={handleLogOut}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"/>\r\n                <span> SALIR</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nfunction CalendarEvent({event}) {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <>\r\n            <b>{title} -</b>\r\n            <span> {user?.name}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CalendarEvent;","export const CUSTOM_MODAL_STYLE = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n};\r\n","import {TYPES} from '../types/types';\r\n\r\nfunction uiOpenModal() {\r\n    return {\r\n        type: TYPES.uiOpenModal\r\n    }\r\n}\r\n\r\nfunction uiCloseModal() {\r\n    return {\r\n        type: TYPES.uiCloseModal\r\n    }\r\n}\r\n\r\nexport {\r\n    uiOpenModal,\r\n    uiCloseModal,\r\n}","import React, {useCallback, useEffect, useState} from 'react';\r\nimport * as moment from 'moment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useForm from '../../../hooks/useForm';\r\nimport {toast} from 'react-toastify';\r\nimport {TOASTER_CONFIG} from '../../../constant/toaster-config';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    calendarClearSelectedEvent, calendarStartUpdateEvent,\r\n    calendatStartAddNewEvent\r\n} from '../../../actions/calendar';\r\nimport {uiCloseModal} from '../../../actions/ui';\r\n\r\nconst initalDate = moment()\r\n    .add(0, 'hours')\r\n    .format('yyyy-MM-DDTHH:mm');\r\n\r\nconst finishDate = moment()\r\n    .add(1, 'days')\r\n    .format('yyyy-MM-DDTHH:mm');\r\n\r\n\r\nfunction CalendarForm() {\r\n\r\n    const dispatch = useDispatch();\r\n    const {selectedEvent} = useSelector(select => select.calendar);\r\n\r\n    const [formValues, formInputChange, resetForm, setFormValues] = useForm({\r\n        title: '',\r\n        notes: '',\r\n        startDate: initalDate,\r\n        endDate: finishDate,\r\n    });\r\n\r\n    const [isFormValied, setFormValid] = useState(false)\r\n\r\n    const {\r\n        title,\r\n        notes,\r\n        startDate,\r\n        endDate,\r\n    } = formValues;\r\n\r\n    const validateForm = useCallback(() => {\r\n        return title.trim().length < 2;\r\n    }, [title])\r\n\r\n    useEffect(\r\n        () => {\r\n            setFormValid(validateForm());\r\n        }, [setFormValid, validateForm]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            if (selectedEvent) {\r\n                const startDate = moment(selectedEvent.startDate)\r\n                    .format('yyyy-MM-DDTHH:mm');\r\n                const endDate = moment(selectedEvent.endDate)\r\n                    .format('yyyy-MM-DDTHH:mm');\r\n                const actualEvent = {\r\n                    ...selectedEvent,\r\n                    startDate,\r\n                    endDate,\r\n                }\r\n                setFormValues(actualEvent);\r\n            }\r\n        }, [selectedEvent, setFormValues]\r\n    )\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        const date1 = moment(startDate)\r\n            .format('MM/DD/YYYY');\r\n        const date2 = moment(endDate)\r\n            .format('MM/DD/YYYY');\r\n\r\n        const isValidDate = moment(date1, 'MM/DD/YYYY')\r\n            .isSameOrBefore(date2);\r\n\r\n        if (!isValidDate) {\r\n            return toast.error('Fecha no válida. La fecha de inicio debe ser menor a la final.', {\r\n                ...TOASTER_CONFIG,\r\n            });\r\n        }\r\n\r\n        const newEvent = {\r\n            ...formValues,\r\n            startDate: moment(startDate).format('YYYY-MM-DD'),\r\n            endDate: moment(endDate).format('YYYY-MM-DD'),\r\n        }\r\n\r\n        formValues.notes === '' && delete newEvent.notes;\r\n\r\n        if (selectedEvent) {\r\n            dispatch(calendarStartUpdateEvent(selectedEvent._id, newEvent));\r\n        } else {\r\n            dispatch(calendatStartAddNewEvent(newEvent));\r\n        }\r\n\r\n        dispatch(calendarClearSelectedEvent());\r\n        dispatch(uiCloseModal());\r\n        resetForm();\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-0 mb-4\">\r\n            <h3 className=\"text-center\">\r\n                {\r\n                    selectedEvent ? 'EDITAR' : 'AGREGAR'\r\n                } EVENTO\r\n            </h3>\r\n            <hr/>\r\n            <form onSubmit={handleOnSubmit}>\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-12\">\r\n                        <label htmlFor=\"startDate\">Fecha y hora inicio</label>\r\n                        <TextField\r\n                            id=\"startDate\"\r\n                            name=\"startDate\"\r\n                            className=\"form-control\"\r\n                            type=\"datetime-local\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={formInputChange}\r\n                            value={startDate}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-12 mt-4\">\r\n                        <label htmlFor=\"endDate\">Fecha y hora fin</label>\r\n                        <TextField\r\n                            id=\"endDate\"\r\n                            name=\"endDate\"\r\n                            className=\"form-control\"\r\n                            type=\"datetime-local\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={formInputChange}\r\n                            value={endDate}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-12 mt-3\">\r\n                        <hr/>\r\n                        <label>\r\n                            Titulo y notas\r\n                        </label>\r\n                        <small id=\"emailHelp\"\r\n                               className=\"form-text text-muted\"\r\n                        >\r\n                            Una descripción corta\r\n                        </small>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            onChange={formInputChange}\r\n                            value={title}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-12 mt-4\">\r\n                        <small\r\n                            id=\"descriptionHelp\"\r\n                            className=\"form-text text-muted\"\r\n                        >\r\n                            Información adicional de la nota\r\n                        </small>\r\n                        <textarea\r\n                            id=\"description\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas adicionales\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            onChange={formInputChange}\r\n                            value={notes}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-12 mt-3\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-outline-primary btn-block\"\r\n                            disabled={isFormValied}\r\n                        >\r\n                            <i className=\"far fa-save\"/>\r\n                            <span>\r\n                                {\r\n                                    selectedEvent ? ' EDITAR' : ' GUARDAR'\r\n                                }\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarForm;","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport {CUSTOM_MODAL_STYLE} from '../../../constant/custom-modal-style';\r\nimport CalendarForm from '../form/CalendarForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {uiCloseModal} from '../../../actions/ui';\r\nimport {calendarClearSelectedEvent} from \"../../../actions/calendar\";\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction CalendarModal() {\r\n\r\n    const {modalOpen} = useSelector(select => select.ui);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch(calendarClearSelectedEvent());\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <Modal\r\n                    isOpen={modalOpen}\r\n                    // onAfterOpen={afterOpenModal}\r\n                    onRequestClose={closeModal}\r\n                    style={CUSTOM_MODAL_STYLE}\r\n                    closeTimeoutMS={250}\r\n                    className=\"modal\"\r\n                    overlayClassName=\"modal-fondo\"\r\n                >\r\n                    <CalendarForm/>\r\n\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarModal;","export const CALENDAR_MESSAGES = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {uiOpenModal} from '../../actions/ui';\r\nimport {calendarClearSelectedEvent} from '../../actions/calendar';\r\n\r\nfunction AddNewEvent() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch(calendarClearSelectedEvent());\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className=\"btn btn-primary btn-add\"\r\n        onClick={handleOpenModal}\r\n        >\r\n            <i className=\"fas fa-plus\"/>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default AddNewEvent;\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {calendarStartDeleteEvent} from '../../actions/calendar';\r\n\r\nfunction DeleteEvent() {\r\n\r\n    const dispatch = useDispatch();\r\n    const {selectedEvent} = useSelector(select => select.calendar);\r\n\r\n    const handleDeleteEvent = () => {\r\n        dispatch(calendarStartDeleteEvent(selectedEvent._id));\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-sm btn-danger btn-delete\"\r\n            onClick={handleDeleteEvent}\r\n        >\r\n            <i className=\"fas fa-trash\"/> ELIMINAR\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport default DeleteEvent;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nimport Navbar from '../../ui/Navbar';\r\nimport CalendarEvent from '../CalendarEvent';\r\nimport CalendarModal from '../modal/CalendarModal';\r\nimport * as moment from 'moment';\r\nimport {CALENDAR_MESSAGES} from '../../../constant/calendar-message';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {uiOpenModal} from '../../../actions/ui';\r\nimport {\r\n    calendarClearSelectedEvent,\r\n    calendarSetSelectedEvent,\r\n    calendarStartLoadingEvents\r\n} from '../../../actions/calendar';\r\nimport AddNewEvent from '../../ui/AddNewEvent';\r\nimport DeleteEvent from '../../ui/DeleteEvent';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nfunction CalenderScreen() {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('pestania-activa') || 'month');\r\n    const dispatch = useDispatch();\r\n    const {events, selectedEvent} = useSelector(select => select.calendar);\r\n    const {user:{uid}} = useSelector(select => select.auth);\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(calendarStartLoadingEvents());\r\n        }, [dispatch]\r\n    );\r\n\r\n    const eventGetStyle = (event, startDate, endDate, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (event.user.uid === uid) ? '#3174ad' : '#c19c17',\r\n            boderRadius: '0px',\r\n            display: 'block',\r\n            color: '#fff',\r\n        }\r\n        return {style};\r\n    }\r\n\r\n    const onDoubleClick = (event) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSimpleClick = (event) => {\r\n        dispatch(calendarSetSelectedEvent(event));\r\n    }\r\n\r\n    const onViewChange = (event) => {\r\n        setLastView(event);\r\n        localStorage.setItem('pestania-activa', event);\r\n    }\r\n\r\n    const onSelectSlot = (event) => {\r\n        dispatch(calendarClearSelectedEvent());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"startDate\"\r\n                endAccessor=\"endDate\"\r\n                style={{height: 500}}\r\n                messages={CALENDAR_MESSAGES}\r\n                eventPropGetter={eventGetStyle}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSimpleClick}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewEvent/>\r\n            {\r\n                selectedEvent && <DeleteEvent/>\r\n            }\r\n            <CalendarModal/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalenderScreen;","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Card} from 'primereact/card';\r\nimport {Link} from 'react-router-dom';\r\nimport useForm from '../../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport {toast} from 'react-toastify';\r\nimport {TOASTER_CONFIG} from '../../../constant/toaster-config';\r\nimport {useDispatch} from 'react-redux';\r\nimport {startRegisterUser} from '../../../actions/auth';\r\n\r\nconst initalStateErrosForm = {\r\n    password: '',\r\n    name: '',\r\n    email: '',\r\n}\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, formInputChange,] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n    });\r\n\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    const [errorsForm, setErrorForm] = useState(initalStateErrosForm);\r\n\r\n    const {\r\n        name,\r\n        email,\r\n        password,\r\n        passwordConfirm,\r\n    } = formValues;\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (passwordConfirm !== password) {\r\n            return toast.error('Contraseñas ingresadas no coinciden', TOASTER_CONFIG);\r\n        }\r\n\r\n        dispatch(startRegisterUser(formValues));\r\n\r\n    }\r\n\r\n    const validateForm = useCallback(\r\n        () => {\r\n            setErrorForm(initalStateErrosForm);\r\n\r\n            if (name.trim().length < 3 && name.trim().length > 0) {\r\n                setErrorForm(err => ({\r\n                    ...err,\r\n                    name: 'El campo nombre debe tener al menos 3 caracteres',\r\n                }));\r\n                return false;\r\n            }\r\n\r\n            if (!validator.isEmail(email) && email.trim().length > 0) {\r\n                setErrorForm(err => ({\r\n                    ...err,\r\n                    email: 'El email ingresado no es valido',\r\n                }));\r\n                return false;\r\n            }\r\n\r\n            return true\r\n        }, [name, email]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            const isValid = validateForm();\r\n            setFormValid(isValid);\r\n        }, [name, email, setFormValid, validateForm]\r\n    )\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row h-100\">\r\n                <div className=\"col-md-5 mx-auto separacion-card\">\r\n                    <Card>\r\n                        <h4 className=\"text-center mb-4\">\r\n                            REGISTRO\r\n                        </h4>\r\n                        <hr/>\r\n                        <form onSubmit={handleOnSubmit}>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-sm-12 mt-3\">\r\n                                    <label\r\n                                        className=\"title-label\"\r\n                                        htmlFor=\"name\"\r\n                                    >\r\n                                        Nombres:*\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        id=\"name\"\r\n                                        autoComplete=\"off\"\r\n                                        placeholder=\"EJ: Edwin Guamushig\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onChange={formInputChange}\r\n                                    />\r\n                                    {\r\n                                        errorsForm.name !== '' && (\r\n                                            <small className=\"text-danger\"\r\n                                            >\r\n                                                {errorsForm.name}\r\n                                            </small>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-12 mt-3\">\r\n                                    <label\r\n                                        className=\"title-label\"\r\n                                        htmlFor=\"email\"\r\n                                    >\r\n                                        Correo:*\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        autoComplete=\"off\"\r\n                                        placeholder=\"EJ: edwin.guamushig@calendar.com\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        onChange={formInputChange}\r\n                                    />\r\n                                    {\r\n                                        errorsForm.email !== '' && (\r\n                                            <small className=\"text-danger\"\r\n                                            >\r\n                                                {errorsForm.email}\r\n                                            </small>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-12 mt-3\">\r\n                                    <label\r\n                                        className=\"title-label\"\r\n                                        htmlFor=\"password\"\r\n                                    >\r\n                                        Password:*\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"off\"\r\n                                        placeholder=\"***************\"\r\n                                        name=\"password\"\r\n                                        value={password}\r\n                                        onChange={formInputChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-12 mt-3\">\r\n                                    <label\r\n                                        className=\"title-label\"\r\n                                        htmlFor=\"passwordConfirm\"\r\n                                    >\r\n                                        Confirmar password:*\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        id=\"passwordConfirm\"\r\n                                        autoComplete=\"off\"\r\n                                        placeholder=\"***************\"\r\n                                        name=\"passwordConfirm\"\r\n                                        value={passwordConfirm}\r\n                                        onChange={formInputChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-12 mt-4\">\r\n                                    <button\r\n                                        className=\"btn btn-block btn-sm btn-info\"\r\n                                        type=\"submit\"\r\n                                        disabled={!formValid}\r\n                                    >\r\n                                        REGISTRAR\r\n                                    </button>\r\n\r\n                                    <button\r\n                                        className=\"btn btn-sm btn-link mt-3 btn-block\">\r\n                                        <Link to=\"/login\">\r\n                                            Ya me encuentro registrado\r\n                                        </Link>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterScreen;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nfunction PublicRouter(\r\n    {\r\n        isAuth,\r\n        component: Component,\r\n        ...rest\r\n    }\r\n) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={\r\n                (props) => !isAuth ?\r\n                    <Component {...props}/>\r\n                    :\r\n                    <Redirect to=\"/app\"/>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PublicRouter;","import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nfunction PrivateRouter(\r\n    {\r\n        isAuth,\r\n        component: Component,\r\n        ...rest\r\n    }\r\n) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={\r\n                (props) => isAuth ?\r\n                    <Component {...props}/>\r\n                    :\r\n                    <Redirect to=\"/login\"/>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default PrivateRouter;","import React, {useEffect} from 'react';\r\nimport {\r\n    BrowserRouter as Router, Redirect,\r\n    Switch,\r\n} from 'react-router-dom';\r\nimport LoginScreen from '../components/auth/login/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/route/CalendarScreen';\r\nimport RegisterScreen from '../components/auth/register/RegisterScreen';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {renewToken} from '../actions/auth';\r\nimport PublicRouter from './PublicRouter';\r\nimport PrivateRouter from './PrivateRouter';\r\n\r\nfunction AppRouter() {\r\n\r\n    const dispatch = useDispatch();\r\n    const {user} = useSelector(state => state.auth);\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(renewToken());\r\n        }, [dispatch]\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRouter\r\n                    path=\"/login\"\r\n                    component={LoginScreen}\r\n                    isAuth={!!user}\r\n                />\r\n                <PublicRouter\r\n                    path=\"/register\"\r\n                    component={RegisterScreen}\r\n                    isAuth={!!user}\r\n                />\r\n                <PrivateRouter\r\n                    path=\"/app\"\r\n                    component={CalendarScreen}\r\n                    isAuth={!!user}\r\n                />\r\n                <Redirect to=\"/app\"/>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import {TYPES} from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nfunction uiReducer(state = initialState, action) {\r\n\r\n    const {type} = action;\r\n\r\n    switch (type) {\r\n        case TYPES.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n        case TYPES.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default uiReducer;\r\n","import {TYPES} from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    selectedEvent: null,\r\n}\r\n\r\nfunction calendarReducer(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case TYPES.calendarLoadEvents:\r\n            return {\r\n                ...state,\r\n                events: [...payload],\r\n            }\r\n        case TYPES.calendarSetSelectedEvent:\r\n            return {\r\n                ...state,\r\n                selectedEvent: payload,\r\n            }\r\n        case TYPES.calendarAddNewEvent:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, payload]\r\n            }\r\n        case TYPES.calendarClearSelectedEvent:\r\n            return {\r\n                ...state,\r\n                selectedEvent: payload,\r\n            }\r\n        case TYPES.calendarUpdateEvent:\r\n            return {\r\n                ...state,\r\n                events: state\r\n                    .events\r\n                    .map(\r\n                        (event) => event._id === payload.id ?\r\n                            payload.event :\r\n                            event\r\n                    )\r\n            }\r\n        case TYPES.calendarDeleteEvent:\r\n            return {\r\n                ...state,\r\n                selectedEvent: null,\r\n                events: state\r\n                    .events\r\n                    .filter(\r\n                        (event) => event._id !== payload\r\n                    )\r\n            }\r\n        case TYPES.calendarLogout: {\r\n            return {\r\n                ...initialState,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default calendarReducer;\r\n","import {TYPES} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n}\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case TYPES.authLogin:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...payload,\r\n                },\r\n                authenticated: true,\r\n            }\r\n        case TYPES.authAuthenticatedFinish:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n            }\r\n        case TYPES.authLogout:\r\n            return {\r\n                authenticated: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {combineReducers} from 'redux';\r\nimport uiReducer from './uiReducer';\r\nimport calendarReducer from './calendarReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport const principalReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport {principalReducer} from '../reducers/principalReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose();\r\n\r\nexport const store = createStore(\r\n    principalReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport AppRouter from './router/AppRouter';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\n\r\nfunction CalendarApp() {\r\n    return (\r\n     <Provider store={store}>\r\n         <AppRouter/>\r\n         <ToastContainer\r\n             hideProgressBar={false}\r\n             newestOnTop={false}\r\n             closeOnClick\r\n             rtl\r\n             pauseOnFocusLoss\r\n             draggable\r\n             pauseOnHover\r\n         />\r\n         </Provider>\r\n    );\r\n}\r\n\r\nexport default CalendarApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CalendarApp from './app/CalendarApp';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './style.scss';\r\n\r\n\r\nReactDOM.render(\r\n    <CalendarApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}